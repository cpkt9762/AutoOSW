class IClientUserStatsMap
{
	virtual void * GetNumStats( CGameID ) = 0;
	virtual const char * GetStatName( CGameID, uint32 ) = 0;
	virtual void * GetStatType( CGameID, char const* ) = 0;
	virtual void * GetNumAchievements( CGameID ) = 0;
	virtual const char * GetAchievementName( CGameID, uint32 ) = 0;
	virtual void * RequestCurrentStats( CGameID ) = 0;
	virtual void * GetStat( CGameID, char const*, int32 * ) = 0;
	virtual void * GetStat( CGameID, char const*, float * ) = 0;
	virtual void * SetStat( CGameID, char const*, int32 ) = 0;
	virtual void * SetStat( CGameID, char const*, float ) = 0;
	virtual void * UpdateAvgRateStat( CGameID, char const*, float, double ) = 0;
	virtual void * GetAchievement( CGameID, char const*, bool *, uint32 * ) = 0;
	virtual void * SetAchievement( CGameID, char const* ) = 0;
	virtual void * ClearAchievement( CGameID, char const* ) = 0;
	virtual void * StoreStats( CGameID ) = 0;
	virtual void * GetAchievementIcon( CGameID, char const*, EGetAchievementIcon ) = 0;
	virtual void * BGetAchievementIconURL( CGameID, char const*, EGetAchievementIcon, char *, uint32 ) = 0;
	virtual const char * GetAchievementDisplayAttribute( CGameID, char const*, char const*, bool ) = 0;
	virtual void * IndicateAchievementProgress( CGameID, char const*, uint32, uint32 ) = 0;
	virtual void SetMaxStatsLoaded( uint32 ) = 0;
	virtual void * RequestUserStats( CSteamID, CGameID ) = 0;
	virtual void * GetUserStat( CSteamID, CGameID, char const*, int32 * ) = 0;
	virtual void * GetUserStat( CSteamID, CGameID, char const*, float * ) = 0;
	virtual void * GetUserAchievement( CSteamID, CGameID, char const*, bool *, uint32 * ) = 0;
	virtual void * ResetAllStats( CGameID, bool ) = 0;
	virtual void * FindOrCreateLeaderboard( char const*, ELeaderboardSortMethod, ELeaderboardDisplayType ) = 0;
	virtual void * FindLeaderboard( char const* ) = 0;
	virtual const char * GetLeaderboardName( uint64 ) = 0;
	virtual void * GetLeaderboardEntryCount( uint64 ) = 0;
	virtual void * GetLeaderboardSortMethod( uint64 ) = 0;
	virtual void * GetLeaderboardDisplayType( uint64 ) = 0;
	virtual void * DownloadLeaderboardEntries( uint64, ELeaderboardDataRequest, int32, int32 ) = 0;
	virtual void * DownloadLeaderboardEntriesForUsers( uint64, CSteamID *, int32 ) = 0;
	virtual void * GetDownloadedLeaderboardEntry( uint64, int32, LeaderboardEntry_t *, int32 *, int32 ) = 0;
	virtual void * AttachLeaderboardUGC( uint64, uint64 ) = 0;
	virtual void * UploadLeaderboardScore( uint64, ELeaderboardUploadScoreMethod, int32, int32 const*, int32 ) = 0;
	virtual void * GetNumberOfCurrentPlayers() = 0;
	virtual void * GetNumAchievedAchievements( CGameID ) = 0;
	virtual const char * GetLastAchievementUnlocked( CGameID ) = 0;
	virtual const char * GetMostRecentAchievementUnlocked( CGameID, uint32 ) = 0;
	virtual void * RequestGlobalAchievementPercentages( CGameID ) = 0;
	virtual void * GetMostAchievedAchievementInfo( CGameID, char *, uint32, float *, bool * ) = 0;
	virtual void * GetNextMostAchievedAchievementInfo( CGameID, int32, char *, uint32, float *, bool * ) = 0;
	virtual void * GetAchievementAchievedPercent( CGameID, char const*, float * ) = 0;
	virtual void * RequestGlobalStats( CGameID, int32 ) = 0;
	virtual void * GetGlobalStat( CGameID, char const*, int64 * ) = 0;
	virtual void * GetGlobalStat( CGameID, char const*, double * ) = 0;
	virtual void * GetGlobalStatHistory( CGameID, char const*, int64 *, uint32 ) = 0;
	virtual void * GetGlobalStatHistory( CGameID, char const*, double *, uint32 ) = 0;
};

