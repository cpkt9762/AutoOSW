class IClientVideoMap
{
	virtual void * BGetUserVideoFolder( char *, int32 ) = 0;
	virtual void UnlockH264() = 0;
	virtual void * EGetBroadcastReady() = 0;
	virtual void BeginBroadcastSession() = 0;
	virtual void EndBroadcastSession() = 0;
	virtual void * IsBroadcasting( int32 * ) = 0;
	virtual void * BIsUploadingThumbnails() = 0;
	virtual void * GetBroadcastSessionID() = 0;
	virtual void * ReceiveBroadcastChat( CSteamID, uint64, bool ) = 0;
	virtual void * PostBroadcastChat( uint64, char const* ) = 0;
	virtual void * MuteBroadcastChatUser( uint64, CSteamID ) = 0;
	virtual void * InitBroadcastVideo( int32, int32, int32, int32, uint8 const*, int32, uint8 const*, int32 ) = 0;
	virtual void * InitBroadcastAudio( int32, int32, int32, int32, int32, uint8 const*, int32 ) = 0;
	virtual void * UploadBroadcastFrame( bool, bool, uint32, int64, int64, uint8 const*, int32 ) = 0;
	virtual void * UploadBroadcastThumbnail( int32, int32, uint8 const*, int32 ) = 0;
	virtual void DroppedVideoFrames( int32 ) = 0;
	virtual void SetCurrentVideoEncodingRate( int32 ) = 0;
	virtual void SetMicrophoneState( bool, bool ) = 0;
	virtual void SetVideoSource( bool ) = 0;
	virtual void BroadcastRecorderError( EBroadcastRecorderResult ) = 0;
	virtual void LoadBroadcastSettings() = 0;
	virtual void SetBroadcastPermissions( EBroadcastPermission ) = 0;
	virtual void * GetBroadcastPermissions() = 0;
	virtual void * GetBroadcastMaxKbps() = 0;
	virtual void * GetBroadcastDelaySeconds() = 0;
	virtual void * BGetBroadcastDimensions( int32 *, int32 * ) = 0;
	virtual void * GetBroadcastIncludeDesktop() = 0;
	virtual void * GetBroadcastRecordSystemAudio() = 0;
	virtual void * GetBroadcastRecordMic() = 0;
	virtual void * GetBroadcastShowChatCorner() = 0;
	virtual void * GetBroadcastShowDebugInfo() = 0;
	virtual void * GetBroadcastShowReminderBanner() = 0;
	virtual void * GetBroadcastEncoderSetting() = 0;
	virtual void InviteToBroadcast( CSteamID, bool ) = 0;
	virtual void IgnoreApprovalRequest( CSteamID ) = 0;
	virtual void BroadcastFirstTimeComplete() = 0;
	virtual void SetInHomeStreamState( bool ) = 0;
	virtual void WatchBroadcast( CSteamID ) = 0;
	virtual const char * GetWatchBroadcastMPD( CSteamID ) = 0;
	virtual void * GetApprovalRequestCount() = 0;
	virtual void * GetApprovalRequests( CSteamID *, uint32 ) = 0;
	virtual void GetVideoURL( uint32 ) = 0;
	virtual void GetOPFSettings( uint32 ) = 0;
	virtual void * GetOPFStringForApp( uint32, char *, int32, int32 * ) = 0;
};

